# Highly divisible triangular number
# Problem 12
#
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be
# 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ... Let us list the
# factors of the first seven triangle numbers:

# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors. What is the value of the first triangle
# number to have over five hundred divisors?
#

triangles = Enumerator.new { |y|
  n = i = 1
  loop {
    y << n
    i += 1
    n += i
  }
}

# Returns the number of divisors of n.
# (see http://en.wikipedia.org/wiki/Divisor_function)
#
def divisor n

  result = 1
  remainder = n
  i = 2

  while i * i <= n do
    pow = 0
    while remainder % i == 0
      remainder = remainder / i
      pow += 1
    end
    result *= (pow + 1)
    i += 1
  end

  if remainder > 1
    result *= 2
  end

  result
end

p triangles.find { |x| divisor(x) > 500 }
p "DONE"
